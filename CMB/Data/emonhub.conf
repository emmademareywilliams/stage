########################################################################
#######################      emonhub.conf     #########################
#######################################################################
### emonHub configuration file, for info see documentation:
### http://github.com/openenergymonitor/emonhub/blob/emon-pi/configuration.md
#######################################################################
#######################    emonHub  settings    #######################
#######################################################################

[hub]
### loglevel must be one of INFO, INFO, INFO, ERROR, and CRITICAL
loglevel = INFO
### Uncomment this to also send to syslog
# use_syslog = yes
#######################################################################
#######################       Interfacers       #######################
#######################################################################

[interfacers]
[[ModbusTCP]]     
# this interfacer retrieves register information from modbusTCP clients 
# retrieve register information from modbus TCP documentation for your inverter.
# information here designed for enless 169 Mhz sensors
    Type = EmonModbusTcpInterfacer2
    [[[init_settings]]]
        modbus_IP = 192.168.1.1   # ip address of client to retrieve data from
        modbus_port = 503          # Portclient listens on
    [[[runtimesettings]]] 
        # nodeid used to match with node definition in nodes section below. Can be set to any integer value not previously used.
	nodeIds = 12,13,14,16,17,18,19,20,21
        # Channel to publish data to should leave as ToEmonCMS
        pubchannels = ToEmonCMS,
        # time in seconds between checks, This is in addition to emonhub_interfacer.run() sleep time of .01
        # use this value to set the frequency of data retrieval from modbus client
        interval = 60

### This interfacer manages the RFM12Pi/RFM69Pi/emonPi module
[[RFM2Pi]]
    Type = EmonHubJeeInterfacer
    [[[init_settings]]]
        com_port = /dev/ttyAMA0
        com_baud = 38400                        # 9600 for old RFM12Pi
    [[[runtimesettings]]]
        pubchannels = ToEmonCMS,
        subchannels = ToRFM12,

        group = 210
        frequency = 433
        baseid = 5                              # emonPi / emonBase nodeID
        calibration = 230V                      # (UK/EU: 230V, US: 110V)
        quiet = true                            # Disable quite mode (default enabled) to enable RF packet debugging, show packets which fail crc
        #interval =  60                         # Interval to transmit time to emonGLCD (seconds)
        

[[MQTT]]
    Type = EmonHubMqttInterfacer
    [[[init_settings]]]
        mqtt_host = 127.0.0.1
        mqtt_port = 1883
        mqtt_user = emonpi
        mqtt_passwd = emonpimqtt2016

    [[[runtimesettings]]]
        pubchannels = ToRFM12,
        subchannels = ToEmonCMS,

        # emonhub/rx/10/values format
        # Use with emoncms Nodes module
        node_format_enable = 1
        node_format_basetopic = emonhub/

        # emon/emontx/power1 format - use with Emoncms MQTT input
        # http://github.com/emoncms/emoncms/blob/master/docs/RaspberryPi/MQTT.md
        nodevar_format_enable = 1
        nodevar_format_basetopic = emon/


#######################################################################
#######################          Nodes          #######################
#######################################################################

[nodes]

## See config user guide: http://github.com/openenergymonitor/emonhub/blob/master/configuration.md

[[1]]
    nodename = emontx1
    [[[rx]]]
       names = power1, power2, power3, power4, vrms, temp1, temp2, temp3, temp4, temp5, temp6, pulse
       datacode = h
       scales = 1,1,1,1,0.01,0.1,0.1, 0.1,0.1,0.1,0.1,1
       units =W,W,W,W,V,C,C,C,C,C,C,p

[[4]]
    nodename = emonTx4
    firmware =V2_3_emonTxV3_4_DiscreteSampling
    hardware = emonTx_(NodeID_DIP_Switch1:OFF)
    [[[rx]]]
       names = power1, power2, power3, power4, Vrms,pulse
       datacodes = h,h,h,h,h,L
       scales = 1,1,1,1,0.01,1
       units =W,W,W,W,V,p

[[5]]
    nodename = emonpi
    [[[rx]]]
        names = power1,power2,power1pluspower2,vrms,t1,t2,t3,t4,t5,t6,pulsecount
        datacodes = h, h, h, h, h, h, h, h, h, h, L
        scales = 1,1,1,0.01,0.1,0.1,0.1,0.1,0.1,0.1,1
        units = W,W,W,V,C,C,C,C,C,C,p

[[12]]
    nodename = TRH12220046
    [[[rx]]]
       names = SlaveType,Timer,RSSI,serHigh,serLow,temp,hum
       registers = 31070,31071,31072,31073,31074,31075,31076
       datacode = H
       scales = 1,1,0.5,1,1,0.1,0.1

[[13]]
    nodename = TRH12220020
    [[[rx]]]
       names = SlaveType,Timer,RSSI,serHigh,serLow,temp,hum
       registers = 31048,31049,31050,31051,31052,31053,31054
       datacode = H
       scales = 1,1,0.5,1,1,0.1,0.1

[[14]]
    nodename = CO218251004
    [[[rx]]]
        names = Timer,RSSI,serHigh,serLow,co2,temp,hum
        registers = 31093,31094,31095,31096,31097,31098,31099
        datacode = H
        scales = 1,0.5,1,1,1,0.1,0.1

[[16]]
    nodename = TRH12220064
    [[[rx]]]
       names = SlaveType,Timer,RSSI,serHigh,serLow,temp,hum
       registers = 31081,31082,31083,31084,31085,31086,31087
       datacode = H
       scales = 1,1,0.5,1,1,0.1,0.1

[[17]]
    nodename = T12118481
    [[[rx]]]
        names = RSSI,serHigh,serLow,temp
        registers = 31006,31007,31008,31009
        datacode = H
        scales = 0.5,1,1,0.1

[[18]]
    nodename = TEXT12310257
    [[[rx]]]
        names = RSSI,serHigh,serLow,temp,timer,slavetype
        registers = 31039,31040,31041,31042,31038,31037
        unitId = 1
        datacode = h
        scales = 0.5,1,1,0.1,1,1

[[19]]
    nodename = TEXT12310267
    [[[rx]]]
        names = RSSI,serHigh,serLow,temp
        registers = 31028,31029,31030,31031
        datacode = h
        scales = 0.5,1,1,0.1

[[20]]
    nodename = TRH12220041
    [[[rx]]]
        names = RSSI,serHigh,serLow,temp,hum,Timer,SlaveType
        registers = 31061,31062,31063,31064,31065,31060,31059
        datacode = H
        scales = 0.5,1,1,0.1,0.1,1,1

[[21]]
    nodename = circuits_PT100
    [[[rx]]]
        names = serial,PT100_1,PT100_2,PT100_3,PT100_4
        registers = 1,2,3,4,5
        unitId = 2
        datacode = H
        scales = 1,0.1,0.1,0.1,0.1